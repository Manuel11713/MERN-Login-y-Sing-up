{"version":3,"sources":["Components/Login_Registro.jsx","Components/Home.jsx","Components/Registro.jsx","Components/Login.jsx","Components/Error.jsx","Components/Router.jsx","Components/App.js","serviceWorker.js","index.js"],"names":["Login_registro","props","react_default","a","createElement","Fragment","react_router_dom","to","Home","login","this","logged","Login_Registro","id","className","Component","Registro","nombreRef","React","createRef","correoRef","passwordRef","apellidoRef","obtenerDatos","e","preventDefault","data","nombre","_this","current","value","correo","password","apellido","console","log","axios","post","then","res","err","onSubmit","type","ref","Login","state","Error","mensajeError","passRef","getDatos","pass","put","ok","setState","concat","usuario","cambiarLogin","mensaje","palabra","Router","_this2","react_router","exact","path","render","Components_Home","Components_Registro","Components_Login","Components_Error","App","Components_Router","Boolean","window","location","hostname","match","ReactDOM","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7f959fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Login_registro = props=>{\r\n    return(\r\n        <React.Fragment>\r\n            <Link to='/registro'>\r\n                Registro\r\n            </Link>|\r\n            <Link to='/login'>\r\n                Login\r\n            </Link>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Login_registro;\r\n","import React,{Component} from 'react';\r\nimport './css/Home.css';\r\nimport Login_Registro from './Login_Registro.jsx';\r\nclass Home extends Component{\r\n    render(){\r\n        let login = null;\r\n        if(!this.props.logged)login = <Login_Registro/>;\r\n        else login = 'logged';\r\n        return(\r\n            <div id=\"container-home\">\r\n                <div className=\"container\">\r\n                    <div  className=\"row\">\r\n                        <div className=\"col-12 text-right\">\r\n                            {login}\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Registre una tarea</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React,{Component} from 'react';\r\nimport './css/Registro.css';\r\nimport axios from 'axios';\r\n\r\nclass Registro extends Component{\r\n    nombreRef = React.createRef();\r\n    correoRef = React.createRef();\r\n    passwordRef = React.createRef();\r\n    apellidoRef = React.createRef();\r\n    obtenerDatos=(e)=>{\r\n        e.preventDefault();\r\n\r\n        let nombre = this.nombreRef.current.value;\r\n        let correo = this.correoRef.current.value;\r\n        let password = this.passwordRef.current.value;\r\n        let apellido = this.apellidoRef.current.value;\r\n\r\n\r\n        let data = {nombre,correo,password,apellido};\r\n        console.log(data);\r\n        axios.post('/registro',data).then(res=>console.log(res)).catch(err=>console.log(err))\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\" id=\"container-registro\">\r\n                <div className=\"row justify-content-center\" >\r\n                    <div className=\"col-10 col-md-6 text-center\" >\r\n                        <h2>Ingresa tus datos</h2>\r\n                        <form className=\"pb-3\" onSubmit={this.obtenerDatos}>\r\n                            <div className=\"form-group text-left\">\r\n                                <label>Nombre</label>\r\n                                <input type=\"text\" className=\"form-control\" ref={this.nombreRef}/>\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <label>Apellido</label>\r\n                                <input type=\"text\" className=\"form-control\" ref={this.apellidoRef}/>\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <label>Correo</label>\r\n                                <input type=\"email\" className=\"form-control\" ref={this.correoRef}/>\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <label>Contrase√±a</label>\r\n                                <input type=\"password\" className=\"form-control\" ref={this.passwordRef}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-info\">Registrarme</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Registro;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport './css/Login.css';\r\nclass Login extends Component{\r\n    state={\r\n        Error:false,\r\n        mensajeError: ''\r\n    }\r\n    correoRef = React.createRef();\r\n    passRef = React.createRef();\r\n\r\n    getDatos=e=>{\r\n        \r\n        e.preventDefault();\r\n\r\n        const correo = this.correoRef.current.value;\r\n        const pass = this.passRef.current.value;\r\n        const data = {correo,pass};\r\n\r\n        axios.put('/login',data).then(res=>{\r\n            console.log(res);\r\n            if(!res.data.ok){\r\n                this.setState({\r\n                    Error:true,\r\n                    mensajeError:res.data.mensaje\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    Error:true,\r\n                    mensajeError:`Benvenido ${res.data.usuario.nombre}`\r\n                });\r\n                this.props.cambiarLogin()\r\n            }\r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n    \r\n    render(){\r\n        let palabra=null;\r\n        if(this.state.Error) palabra = <span id=\"rojo\">{this.state.mensajeError}</span>\r\n        return(\r\n        <div className=\"container mt-5\" id=\"container-login\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 text-center\">\r\n                    <h2>Ingresa como usuario</h2>\r\n                    <form className=\"pb-4\" onSubmit={this.getDatos}> \r\n                        <div className=\"form-group text-left\">\r\n                            <label>Correo</label>\r\n                            <input className=\"form-control\" type=\"email\" ref={this.correoRef}/>\r\n                        </div>\r\n                        <div className=\"form-group text-left\">\r\n                            <label>Contrase√±a</label>\r\n                            <input className=\"form-control\" type=\"password\" ref={this.passRef}/>\r\n                        </div>\r\n                        <button className=\"btn btn-info w-100\" type=\"submit\">Ingresar</button>\r\n                    </form>\r\n                    {palabra}\r\n                </div>\r\n\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Error = props=>{\r\n    return(\r\n        <div>Pagina no encontrada</div>\r\n    );\r\n}\r\nexport default Error;","import React,{Component} from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport Home from './Home.jsx';\r\nimport Registro from './Registro.jsx';\r\nimport Login from './Login';\r\nimport Error from './Error.jsx';\r\n\r\nclass Router extends Component{\r\n    state={\r\n        logged:false\r\n    }\r\n    cambiarLogin=()=>{\r\n        this.setState({\r\n            logged:true\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <BrowserRouter>\r\n\r\n                    <Switch>\r\n                        <Route exact path='/' render={props=>{\r\n                            return(<Home logged={this.state.logged}/>);\r\n                        }}  />\r\n                    \r\n                        <Route exact path='/registro' render={props=>{\r\n                            return(<Registro/>);\r\n                        }}/>\r\n\r\n                        <Route exact path='/login' render={props=>{\r\n                            return(<Login cambiarLogin={this.cambiarLogin}/>)\r\n                        }}/>\r\n\r\n                        <Route render={props=>{\r\n                            return(<Error/>);\r\n                        }}/>\r\n\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport Router from './Router.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}